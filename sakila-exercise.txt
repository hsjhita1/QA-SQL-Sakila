1.	Select all Actors from the table.

  SELECT * FROM actor;

2.	Find the actor with the first name “John”.

  SELECT * FROM actor
  WHERE first_name = 'JOHN';

3.	Find all actors with the surname “Neeson”.

  SELECT * FROM actor
  WHERE last_name = 'NEESON';

4.	Find all actors with Id numbers divisible by 10.

  SELECT * FROM actor
  WHERE actor_id % 10 = 0;

5.	What is the description of the movie with ID of 100?

  SELECT description FROM film
  WHERE film_id = 100;

6.	Find every movie with a rating of “R”.

  SELECT film_id, title FROM film
  WHERE rating = 'R';

7.	Find every movie except those with a rating of “R”.

  SELECT film_id, title FROM film
  WHERE rating != 'R';

8.	Find the 10 shortest movies.

  SELECT film_id, title, length FROM film
  ORDER BY length ASC
  LIMIT 10;

9.	Now return only the movie titles.

  SELECT title FROM film;
  ORDER BY length ASC
  LIMIT 10;

10.	Find all movies with Deleted Scenes.

  SELECT film_id, title FROM film
  WHERE special_features LIKE '%Deleted Scenes%';

11.	Which last names are not repeated?

  SELECT last_name FROM actor
  GROUP BY last_name
  HAVING COUNT(last_name) = 1;

12.	Which last names appear more than once?

  SELECT last_name FROM actor
  GROUP BY last_name
  HAVING COUNT(last_name) > 1;

13.	Which actor has appeared in the most films?

  SELECT actor.actor_id, actor.first_name, actor.last_name, count(*) AS NoOfFilms FROM film_actor
  JOIN actor ON film_actor.actor_id = actor.actor_id
  GROUP BY actor_id
  ORDER BY NoOfFilms DESC
  LIMIT 1;

14.	Is ‘Academy Dinosaur’ available for rent from Store 1?

  SELECT * FROM inventory
  WHERE store_id = 1 AND film_id = (
    SELECT film_id FROM film
    WHERE title = 'Academy Dinosaur'
  );

15.	When is ‘Academy Dinosaur’ due?

  SELECT return_date FROM rental
  JOIN inventory ON rental.inventory_id = inventory.inventory_id
  JOIN film_list ON inventory.film_id = film_list.FID
  WHERE title = 'Academy Dinosaur';

16.	What is that average running time of all the films in the database?

   SELECT AVG(length) FROM film;

17.	What is the average running time of films by category?

  SELECT category.name, AVG(length) FROM film
  JOIN film_category ON film.film_id = film_category.film_id
  JOIN category ON film_category.category_id = category.category_id
  GROUP BY category.name;

18.	How many movies have Robots in them?

  SELECT COUNT(*) FROM film_list
  WHERE title LIKE '%Robot%' OR description LIKE '%Robot%';

19.	Find the movie(s) with the longest runtime.

  SELECT film_id, title, length FROM film
  WHERE length = (
    SELECT MAX(length) from film
  )
  ORDER BY length DESC;

20.	Count how many movies were released in 2010.

  SELECT COUNT(*) FROM film
  WHERE release_year = 2010;

21.	Find the titles of all horror movies.

  SELECT title FROM film
  JOIN film_category ON film.film_id = film_category.film_id
  JOIN category ON film_category.category_id = category.category_id
  WHERE category.name = 'Horror';

22.	Return the full name of the staff member – in a column named full_name – with the ID of 1.

  SELECT CONCAT(first_name, " ", last_name) AS full_name from staff
  WHERE staff_id = 1;

23.	Retrieve all movies that Fred Costner has appeared in.

  SELECT title FROM film
  JOIN film_actor ON film.film_id = film_actor.film_id
  JOIN actor ON film_actor.actor_id = actor.actor_id
  WHERE first_name = 'FRED' AND last_name = 'COSTNER';

24.	Find out which location has the most copies of BUCKET BROTHERHOOD.

  SELECT store_id, COUNT(*) AS copies from inventory
  WHERE film_id = (
    SELECT film_id FROM film
    WHERE title = 'BUCKET BROTHERHOOD'
  )
  GROUP BY store_id
  ORDER BY COUNT(store_id) DESC;


25.	How many distinct countries are there?

  SELECT DISTINCT(country) FROM country;

1.	What are the names of all the languages in the database (sorted alphabetically)?

  SELECT name FROM language
  ORDER BY name ASC;

26.	Return the full names (first and last) of actors with “son” in their last name, ordered by their first name.

  SELECT CONCAT(first_name, " ", last_name) AS full_name FROM actor
  WHERE last_name LIKE '%son%'
  ORDER BY first_name ASC;

27.	Create a list of categories and the number of films for each category.

  SELECT category.name, COUNT(*) AS Total FROM film
  JOIN film_category ON film.film_id = film_category.film_id
  JOIN category ON film_category.category_id = category.category_id
  GROUP BY category.name;

28.	Create a list of actors and the number of movies by each actor.

  SELECT actor.actor_id, actor.first_name, actor.last_name, count(*) AS NoOfFilms FROM film_actor
  JOIN actor ON film_actor.actor_id = actor.actor_id
  GROUP BY actor_id;

29.	Which actor/actress has appeared in the most movies?

  SELECT actor.actor_id, actor.first_name, actor.last_name, count(*) AS NoOfFilms FROM film_actor
  JOIN actor ON film_actor.actor_id = actor.actor_id
  GROUP BY actor_id
  ORDER BY NoOfFilms DESC
  LIMIT 1;
